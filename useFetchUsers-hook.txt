"use client"

import { useEffect, useState } from "react"
import { collection, query, where, onSnapshot } from "firebase/firestore"
import { db } from "@/config/firebase"

export default function useFetchUsers() {
  const [users, setUsers] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  useEffect(() => {
    try {
      const usersRef = collection(db, "users")
      const q = query(usersRef, where("role", "==", false)) // exclude admins

      const unsubscribe = onSnapshot(
        q,
        (snapshot) => {
          const usersData = snapshot.docs.map((doc) => ({
            id: doc.id,
            ...doc.data(),
          }))
          setUsers(usersData)
          setLoading(false)
        },
        (err) => {
          console.error("Error fetching users:", err)
          setError(err)
          setLoading(false)
        }
      )

      return () => unsubscribe()
    } catch (err) {
      console.error(err)
      setError(err)
      setLoading(false)
    }
  }, [])

  return { users, loading, error }
}
